[tool.poetry]
name = "ltut"
version = "0.1.0"
description = "A tutorial showcasing formatting and linting using ruff"
authors = ["Daniel Obraczka <obraczka@informatik.uni-leipzig.de>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/dobraczka/linting-tutorial"
keywords = ["linting", "ruff"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
]

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
mypy = "^1.8.0"
ruff = "^0.1.9"
nox = "^2023.4.22"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "poetry-core>=1",
]

[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
ignore = ["W191", "E111", "E114", "E117", "D206", "D300", "Q000", "Q001", "Q002", "Q003", "COM812", "COM819", "ISC001", "ISC002"]
select = ["E", "F"]
#select = ["B", "C", "E", "F", "W", "B", "I", "D", "UP", "A", "C4", "T10", "ICN", "PIE", "PYI", "PT", "RET", "SIM", "ERA", "PD", "PGH", "PL", "NPY", "PERF", "RUF"]


[tool.ruff.lint.mccabe]
max-complexity = 18

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
